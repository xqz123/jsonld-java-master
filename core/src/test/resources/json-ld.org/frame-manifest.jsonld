{
  "@context": "http://json-ld.org/test-suite/context.jsonld",
  "@id": "",
  "@type": "mf:Manifest",
  "name": "Framing",
  "description": "JSON-LD framing tests use object comparison.",
  "baseIri": "http://json-ld.org/test-suite/tests/",
    "sequence": [{
      "@id": "#t0001",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "simple",
      "input": "frame-0001-in.jsonld",
      "frame": "frame-0001-frame.jsonld",
      "expect": "frame-0001-out.jsonld"
    }, {
      "@id": "#t0002",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "reframe w/extra CURIE value",
      "input": "frame-0002-in.jsonld",
      "frame": "frame-0002-frame.jsonld",
      "expect": "frame-0002-out.jsonld"
    }, {
      "@id": "#t0003",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "reframe (null)",
      "input": "frame-0003-in.jsonld",
      "frame": "frame-0003-frame.jsonld",
      "expect": "frame-0003-out.jsonld"
    }, {
      "@id": "#t0004",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "reframe (type)",
      "input": "frame-0004-in.jsonld",
      "frame": "frame-0004-frame.jsonld",
      "expect": "frame-0004-out.jsonld"
    }, {
      "@id": "#t0005",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "reframe (explicit)",
      "input": "frame-0005-in.jsonld",
      "frame": "frame-0005-frame.jsonld",
      "expect": "frame-0005-out.jsonld"
    }, {
      "@id": "#t0006",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "reframe (non-explicit)",
      "input": "frame-0006-in.jsonld",
      "frame": "frame-0006-frame.jsonld",
      "expect": "frame-0006-out.jsonld"
    }, {
      "@id": "#t0007",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "input has multiple types",
      "input": "frame-0007-in.jsonld",
      "frame": "frame-0007-frame.jsonld",
      "expect": "frame-0007-out.jsonld"
    }, {
      "@id": "#t0008",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "array framing cases",
      "input": "frame-0008-in.jsonld",
      "frame": "frame-0008-frame.jsonld",
      "expect": "frame-0008-out.jsonld"
    }, {
      "@id": "#t0009",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "default value",
      "input": "frame-0009-in.jsonld",
      "frame": "frame-0009-frame.jsonld",
      "expect": "frame-0009-out.jsonld"
    }, {
      "@id": "#t0010",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "property CURIE conflict",
      "input": "frame-0010-in.jsonld",
      "frame": "frame-0010-frame.jsonld",
      "expect": "frame-0010-out.jsonld"
    }, {
      "@id": "#t0011",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "@embed",
      "input": "frame-0011-in.jsonld",
      "frame": "frame-0011-frame.jsonld",
      "expect": "frame-0011-out.jsonld"
    }, {
      "@id": "#t0012",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Array frame",
      "input": "frame-0012-in.jsonld",
      "frame": "frame-0012-frame.jsonld",
      "expect": "frame-0012-out.jsonld"
    }, {
      "@id": "#t0013",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Replace existing embed",
      "input": "frame-0013-in.jsonld",
      "frame": "frame-0013-frame.jsonld",
      "expect": "frame-0013-out.jsonld"
    }, {
      "@id": "#t0014",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Replace existing embed on 2nd pass",
      "input": "frame-0014-in.jsonld",
      "frame": "frame-0014-frame.jsonld",
      "expect": "frame-0014-out.jsonld"
    }, {
      "@id": "#t0015",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Replace deeply-nested embed",
      "input": "frame-0015-in.jsonld",
      "frame": "frame-0015-frame.jsonld",
      "expect": "frame-0015-out.jsonld"
    }, {
      "@id": "#t0016",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Use @type in ducktype filter",
      "input": "frame-0016-in.jsonld",
      "frame": "frame-0016-frame.jsonld",
      "expect": "frame-0016-out.jsonld"
    }, {
      "@id": "#t0017",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Non-flat input",
      "input": "frame-0017-in.jsonld",
      "frame": "frame-0017-frame.jsonld",
      "expect": "frame-0017-out.jsonld"
    }, {
      "@id": "#t0018",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "no frame @context but @graph output",
      "input": "frame-0018-in.jsonld",
      "frame": "frame-0018-frame.jsonld",
      "expect": "frame-0018-out.jsonld"
    }, {
      "@id": "#t0019",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Resources can be re-embedded again in each top-level frame match",
      "input": "frame-0019-in.jsonld",
      "frame": "frame-0019-frame.jsonld",
      "expect": "frame-0019-out.jsonld"
    }, {
      "@id": "#t0020",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Blank nodes in an array",
      "input": "frame-0020-in.jsonld",
      "frame": "frame-0020-frame.jsonld",
      "expect": "frame-0020-out.jsonld"
    }, {
      "@id": "#t0021",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Blank nodes in @type",
      "input": "frame-0021-in.jsonld",
      "frame": "frame-0021-frame.jsonld",
      "expect": "frame-0021-out.jsonld",
      "option": {"specVersion": "json-ld-1.1", "processingMode": "json-ld-1.0"}
    } , {
      "@id": "#t0022",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Default inside sets",
      "input": "frame-0022-in.jsonld",
      "frame": "frame-0022-frame.jsonld",
      "expect": "frame-0022-out.jsonld"
    } , {
      "@id": "#t0030",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "@embed",
      "input": "frame-0030-in.jsonld",
      "frame": "frame-0030-frame.jsonld",
      "expect": "frame-0030-out.jsonld"
    }, {
      "@id": "#tg001",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Library framing example with @graph and omitGraph is true.",
      "purpose": "Basic example used in playground and spec examples.",
      "input": "frame-g001-in.jsonld",
      "frame": "frame-g001-frame.jsonld",
      "expect": "frame-g001-out.jsonld",
      "option": {"specVersion": "json-ld-1.1", "omitGraph": true}
    }, {
      "@id": "#tp010",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Property CURIE conflict (prune bnodes)",
      "purpose": "(Not really framing) A term looking like a CURIE becomes a CURIE when framing/compacting if defined as such in frame/context.",
      "option": {"processingMode": "json-ld-1.1", "specVersion": "json-ld-1.1"},
      "input": "frame-0010-in.jsonld",
      "frame": "frame-0010-frame.jsonld",
      "expect": "frame-p010-out.jsonld"
    }, {
      "@id": "#tp020",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Blank nodes in an array (prune bnodes)",
      "option": {"processingMode": "json-ld-1.1", "specVersion": "json-ld-1.1"},
      "input": "frame-0020-in.jsonld",
      "frame": "frame-0020-frame.jsonld",
      "expect": "frame-p020-out.jsonld"
    }, {
      "@id": "#tp021",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Blank nodes in @type (prune bnodes)",
      "option": {"processingMode": "json-ld-1.1", "specVersion": "json-ld-1.1"},
      "input": "frame-0021-in.jsonld",
      "frame": "frame-0021-frame.jsonld",
      "expect": "frame-p021-out.jsonld"
    }, {
      "@id": "#tp046",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Merge graphs if no outer @graph is used (prune bnodes)",
      "option": {"processingMode": "json-ld-1.1", "specVersion": "json-ld-1.1"},
      "input": "frame-0046-in.jsonld",
      "frame": "frame-0046-frame.jsonld",
      "expect": "frame-p046-out.jsonld"
    }, {
      "@id": "#tp050",
      "@type": ["jld:PositiveEvaluationTest", "jld:FrameTest"],
      "name": "Prune blank nodes with alias of @id",
      "purpose": "If @id is aliased in a frame, an unreferenced blank node is still pruned.",
      "input": "frame-p050-in.jsonld",
      "frame": "frame-p050-frame.jsonld",
      "expect": "frame-p050-out.jsonld",
      "option": {"processingMode": "json-ld-1.1", "specVersion": "json-ld-1.1"}
    }]
}
